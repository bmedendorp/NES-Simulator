#include "Memory.h"

Memory::Memory() 
{
	ram = new uint8_t[MEMORY_SIZE_BYTES];
	if (ram)
	{
		Initialize();
	}
}

Memory::~Memory()
{
	delete[] ram;
}

uint8_t Memory::Read(uint16_t address) const
{
	return ram[address];
}

void Memory::Write(uint16_t address, uint8_t data)
{
	ram[address] = data;
}

void Memory::Initialize()
{
	// Program
	ram[0x0600] = 0x0D;
	ram[0x0601] = 0x00;
	ram[0x0602] = 0x0F;
	ram[0x0603] = 0x49;
	ram[0x0604] = 0xFF;
	ram[0x0605] = 0x49;
	ram[0x0606] = 0xFF;
	ram[0x0607] = 0xE8;
	ram[0x0608] = 0xFD;
	ram[0x0609] = 0x00;
	ram[0x060A] = 0x0F;
	ram[0x060B] = 0x65;
	ram[0x060C] = 0x80;
	ram[0x060D] = 0x6A;
	ram[0x060E] = 0x6A;
	ram[0x060F] = 0xC8;
	ram[0x0610] = 0xC8;
	ram[0x0611] = 0x51;
	ram[0x0612] = 0xE2;
	ram[0x0613] = 0xA9;
	ram[0x0614] = 0xB0;
	ram[0x0615] = 0x8D;
	ram[0x0616] = 0x03;
	ram[0x0617] = 0x0F;

	// Data
	ram[0x00E2] = 0x00;
	ram[0x00E3] = 0x0F;
	ram[0x0080] = 0x20;
	ram[0x0F00] = 0xAA;
	ram[0x0F01] = 0x80;
	ram[0x0F02] = 0x55;
	ram[0xFFFC] = 0x00;
	ram[0xFFFD] = 0x06;
}
